100 REM Test Tiles and Sprites
110 QU=0:REM 0=Screen,1=Printer
120 SET FAST ON
130 SCREEN 3:GOSUB _init
133 SET FNKEY 3 TO \"RUN /au/ts.baq\r"
134 SET FNKEY 4 TO \"goto _dump\r"

200 GOSUB _stitle:ARGS "SET PALETTE and GETPALETTE$()"

209 DIM R$(3):FOR L=210 TO 213:GOSUB _output:ARGS LIST$(L):NEXT:REM Grayscale,CGA,C64,Windows
210 DEF RGBLIST R$(0)=0,0,0;1,1,1;2,2,2;3,3,3;4,4,4;5,5,5;6,6,6;7,7,7;8,8,8;9,9,9;10,10,10;11,11,11;12,12,12;13,13,13;14,14,14;15,15,15
211 DEF RGBLIST R$(1)=0,0,0;0,0,10;0,10,0;0,10,10;10,0,0;10,0,10;10,5,0;10,10,10;5,5,5;5,5,15;5,15,5;5,15,15;15,5,5;15,5,15;15,15,5;15,15,15
212 DEF RGBLIST R$(2)=0,0,0;15,15,15;8,0,0;10,15,1;12,4,12;0,12,5;0,0,10;1,1,7;13,8,5;6,4,0;15,7,7;3,3,3;7,7,7;10,15,6;0,8,15;11,11,11
213 DEF RGBLIST R$(3)=0,0,0;7,0,0;0,7,0;7,7,0;0,0,7;7,0,7;0,7,7;11,11,11;7,7,7;15,0,0;0,15,0;15,15,0;0,0,15;15,0,15;0,15,15;15,15,15
218 GOSUB _outskip

220 FOR P=1 TO 3
222 GOSUB _output:ARGS "P=%%:%%" % (P,LIST$(NEXT))
223 SET PALETTE P TO R$(P)
224 GOSUB _assert:ARGS "GETPALETTE$(P)=R$(P)"
226 NEXT

240 GOSUB _pause
241 GOSUB _output:ARGS LIST$(NEXT):REM Default palette
242 DEF INTLIST R$=$111,$F11,$1F1,$FF1,$22E,$F1F,$3CC,$FFF,$CCC,$3BB,$C2C,$419,$FF7,$2D4,$B22,$333
243 GOSUB _output:ARGS LIST$(NEXT)
244 SET PALETTE 1 INDEX 4 TO LEFT$(R$,24)
246 GOSUB _assert:ARGS "GETPALETTE$(1)=LEFT$(R$(1),8)+LEFT$(R$,24)"
248 GOSUB _outskip
250 GOSUB _output:ARGS LIST$(NEXT)
251 SET PALETTE 0 TO R$(0)
252 GOSUB _assert:ARGS "GETPALETTE$(0)=R$(0)"
254 GOSUB _output:ARGS LIST$(NEXT)
255 RESET PALETTE 0
256 GOSUB _assert:ARGS "GETPALETTE$(0)=R$"

300 GOSUB _ptitle:ARGS "SET TILE and GETTILE$()"

310 DIM T$(5):FOR L=311 TO 315:GOSUB _output:ARGS LIST$(L):NEXT
311 T$(1)=$"000FF00000F44F0000F44F0000F44F000F4444F00F4444F0F044440FF444444F"
312 T$(2)=$"0000000000000008000000080800000707000007080000070800000708000006"
313 T$(3)=$"08000004087E7E84087E7E7808000E8708000008000000800000000000000060"
314 T$(4)=$"0000000008000000780000001700000817000007170000084700000846000008"
315 T$(5)=$"44000008448E7E78787E7E78478E000878000008008000000000000000600000"
318 GOSUB _outskip

340 GOSUB _output:ARGS LIST$(NEXT)
341 FOR T=1 TO 5:SET TILE 500+T TO T$(T)
342 GOSUB _assert:ARGS "PEEK$(@20,(500+%%)*32,32)=T$(%%)" % (T,T)
344 GOSUB _assert:ARGS "GETTILE$(500+%%)=T$(%%)" % (T,T)
346 NEXT
348 GOSUB _outskip

360 GOSUB _title:ARGS "FILL TILEMAP"
361 GOSUB _output:ARGS LIST$(NEXT)
362 T9$=$"F0F0F0F00F0F0F0FF0F0F0F00F0F0F0FF0F0F0F00F0F0F0FF0F0F0F00F0F0F0F"
363 GOSUB _output:ARGS LIST$(NEXT)
364 SET TILE 128 TO T9$
365 GOSUB _output:ARGS LIST$(NEXT)
366 FILL TILEMAP TILE 128 PALETTE 2
368 GOSUB _outskip

370 GOSUB _output:ARGS LIST$(NEXT)
371 FILL TILEMAP (5,4) - (8,7) TILE 501 PALETTE 2 
372 T0$="802080208020802080208020"
373 T1$="8020F521F521F521F5218020"
374 GOSUB _assert:ARGS "PEEK$(@20,$188,12)=$`%%`" % (T0$)
375 GOSUB _assert:ARGS "PEEK$(@20,$208,12)=$`%%`" % (T1$)
376 GOSUB _assert:ARGS "PEEK$(@20,$288,12)=$`%%`" % (T1$)
377 GOSUB _assert:ARGS "PEEK$(@20,$308,12)=$`%%`" % (T1$)
378 GOSUB _assert:ARGS "PEEK$(@20,$388,12)=$`%%`" % (T1$)
379 GOSUB _assert:ARGS "PEEK$(@20,$408,12)=$`%%`" % (T0$)

400 GOSUB _output:ARGS LIST$(NEXT)
401 FOR T=1 TO 5:SET TILEMAP (40-T*4,T*2) TO TILE 500+T PALETTE 2:NEXT

410 GOSUB _output:ARGS LIST$(NEXT)
411 FILL TILEMAP (20,10)-(27,17) TILE 502 PALETTE 2
412 GOSUB _output:ARGS LIST$(NEXT)
413 DIM A(20):GET TILEMAP (4,3)-(9,8),*A
414 GOSUB _output:ARGS LIST$(NEXT)
415 GET TILEMAP (4,3)-(9,8),^A$
416 GOSUB _assert:ARGS "A$=ASC$(`0606`+T0$+T1$+T1$+T1$+T1$+T0$)"

420 GOSUB _output:ARGS LIST$(NEXT)
421 PUT TILEMAP (21,11),*A
422 GOSUB _output:ARGS LIST$(NEXT)
423 PUT TILEMAP (11,11),^A$
430 REM add asserts for PUT *A
440 REM add asserts for PUT ^A$

450 REM TILEMAPX : TILEMAPY : TILEMAP(x,y)

490 SCREEN 0,1:PAUSE:SCREEN 3,0

500 GOSUB _output:ARGS LIST$(NEXT)
502 DEF TILELIST T$=501,502,503,504,505
504 GOSUB _assert:ARGS "T$=$`F501F601F701F801F901`"

510 GOSUB _output:ARGS LIST$(NEXT)
512 DEF ATTRLIST P$ = 0,1,0,2,3
514 GOSUB _assert:ARGS "P$=$`0001000203`"

520 GOSUB _output:ARGS LIST$(NEXT)
522 DEF PALETTELIST P$ = 0,1,0,2,3
524 GOSUB _assert:ARGS "P$=$`0001000203`"

530 GOSUB _output:ARGS LIST$(NEXT)
532 DEF SPRITE S1$ = 1,0,0;2,16,0;3,8,8;4,0,16;5,16,16
534 GOSUB _assert:ARGS "S1$=$`051818010000021000030808040010051010`"

540 GOSUB _output:ARGS LIST$(NEXT)
542 DEF SPRITE S2$ = [9,4],[8,3],[7,2]
544 GOSUB _assert:ARGS "S2$=$`061818.90000.40800.80008.30808.70010.20810`"

