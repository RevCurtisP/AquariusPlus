100 REM Unit Tests for COPY
110 QU=0:REM 0=Screen,1=Printer
130 GOSUB _init

190 REM Tests

200 GOSUB _title:ARGS "COPY"
202 PRINT "Build binary data";
204 A=$8000:FOR I=1 TO 8:FOR J=i TO 260 STEP 7:B=I+J
206 IF B<256 THEN POKE A,B:A=A+1
208 NEXT:PRINT ".";:NEXT:PRINT

218 GOSUB _title:ARGS "Memory/Memory 256 boundary"

220 GOSUB _output:ARGS "COPY $8000,256 TO $9000"
221 COPY $8000,256 TO $9000
222 GOSUB _assert:ARGS "PEEK($8000)=$02"
223 GOSUB _assert:ARGS "PEEK($807F)=$86"
224 GOSUB _assert:ARGS "PEEK($80FF)=$2C"
225 GOSUB _assert:ARGS "PEEK($9000)=$02"
226 GOSUB _assert:ARGS "PEEK($907F)=$86"
227 GOSUB _assert:ARGS "PEEK($90FF)=$2C"

228 GOSUB _title:ARGS "Memory/Memory Offset"

230 GOSUB _output:ARGS "COPY $8005,240 TO $9007"
231 COPY   $8005,240 TO $9007
232 GOSUB _assert:ARGS "PEEK($8005)=$25"
233 GOSUB _assert:ARGS "PEEK($8076)=$47"
234 GOSUB _assert:ARGS "PEEK($80F4)=$D2"
235 GOSUB _assert:ARGS "PEEK($9007)=$25"
236 GOSUB _assert:ARGS "PEEK($9078)=$47"
237 GOSUB _assert:ARGS "PEEK($90F6)=$D2"

238 GOSUB _title:ARGS "Overlapping Copy"

240 GOSUB _output:ARGS "COPY $9007,240 TO $9005"
241 COPY $9007,240 TO $9005
242 GOSUB _assert:ARGS "PEEK($9005)=$25"
243 GOSUB _assert:ARGS "PEEK($9076)=$47"
244 GOSUB _assert:ARGS "PEEK($90F4)=$D2"

250 GOSUB _output:ARGS "COPY $9005,240 TO $9007"
251 COPY $9005,240 TO $9007
252 GOSUB _assert:ARGS "PEEK($9007)=$25"
253 GOSUB _assert:ARGS "PEEK($9078)=$47"
254 GOSUB _assert:ARGS "PEEK($90F6)=$D2"

298 GOSUB _title:ARGS "Memory/Page 256 boundary"

300 GOSUB _output:ARGS "COPY $8000,256 TO @40,0"
301 COPY $8000,256 TO @40,0
302 GOSUB _assert:ARGS "PEEK($8000)=$02"
303 GOSUB _assert:ARGS "PEEK($807F)=$86"
304 GOSUB _assert:ARGS "PEEK($80FF)=$2C"
305 GOSUB _assert:ARGS "PEEK(@40,$00)=$02"
306 GOSUB _assert:ARGS "PEEK(@40,$7F)=$86"
307 GOSUB _assert:ARGS "PEEK(@40,$FF)=$2C"

310 GOSUB _output:ARGS "COPY @40,0,256 TO $9100"
311 COPY @40,0,256 TO $9100
312 GOSUB _assert:ARGS "PEEK(@40,$00)=$02"
313 GOSUB _assert:ARGS "PEEK(@40,$7F)=$86"
314 GOSUB _assert:ARGS "PEEK(@40,$FF)=$2C"
315 GOSUB _assert:ARGS "PEEK($9100)=$02"
316 GOSUB _assert:ARGS "PEEK($917F)=$86"
317 GOSUB _assert:ARGS "PEEK($91FF)=$2C"

320 GOSUB _output:ARGS "COPY @40,0,256 TO @50,0"
321 COPY @40,0,256 TO @50,0
322 GOSUB _assert:ARGS "PEEK(@40,$00)=$02"
323 GOSUB _assert:ARGS "PEEK(@40,$7F)=$86"
324 GOSUB _assert:ARGS "PEEK(@40,$FF)=$2C"
325 GOSUB _assert:ARGS "PEEK(@50,$00)=$02"
326 GOSUB _assert:ARGS "PEEK(@50,$7F)=$86"
327 GOSUB _assert:ARGS "PEEK(@50,$FF)=$2C"

328 GOSUB _title:ARGS "Memory/Page Offset"

330 GOSUB _output:ARGS "COPY $8005,256 TO @40,07"
331 COPY $8005,256 TO @40,7
332 GOSUB _assert:ARGS "PEEK($8005)=$25"
333 GOSUB _assert:ARGS "PEEK($8076)=$47"
334 GOSUB _assert:ARGS "PEEK($80F4)=$D2"
335 GOSUB _assert:ARGS "PEEK(@40,$07)=$25"
336 GOSUB _assert:ARGS "PEEK(@40,$78)=$47"
337 GOSUB _assert:ARGS "PEEK(@40,$F6)=$D2"

340 GOSUB _output:ARGS "COPY @40,7,256 TO $9105"
341 COPY @40,7,256 TO $9105
342 GOSUB _assert:ARGS "PEEK(@40,$07)=$25"
343 GOSUB _assert:ARGS "PEEK(@40,$78)=$47"
344 GOSUB _assert:ARGS "PEEK(@40,$F6)=$D2"
345 GOSUB _assert:ARGS "PEEK($9105)=$25"
346 GOSUB _assert:ARGS "PEEK($9176)=$47"
347 GOSUB _assert:ARGS "PEEK($91F4)=$D2"

350 GOSUB _output:ARGS "COPY @40,7,256 TO @50,5"
351 COPY @40,7,256 TO @50,5
352 GOSUB _assert:ARGS "PEEK(@40,$07)=$25"
353 GOSUB _assert:ARGS "PEEK(@40,$78)=$47"
354 GOSUB _assert:ARGS "PEEK(@40,$F6)=$D2"
355 GOSUB _assert:ARGS "PEEK(@50,$05)=$25"
356 GOSUB _assert:ARGS "PEEK(@50,$76)=$47"
357 GOSUB _assert:ARGS "PEEK(@50,$F4)=$D2"

358 GOSUB _title:ARGS "Memory/Page Rollover"

360 GOSUB _output:ARGS "COPY $8000,256 TO @40,$3F80"
361 COPY $8000,256 TO @40,$3F80
362 GOSUB _assert:ARGS "PEEK($8000)=$02"
363 GOSUB _assert:ARGS "PEEK($807F)=$86"
364 GOSUB _assert:ARGS "PEEK($80FF)=$2C"
365 GOSUB _assert:ARGS "PEEK(@40,$3F80)=$02"
366 GOSUB _assert:ARGS "PEEK(@40,$3FFF)=$86"
367 GOSUB _assert:ARGS "PEEK(@41,$007F)=$2C"

370 GOSUB _output:ARGS "COPY @40,$3F80,256 TO $9200"
371 COPY @40,$3F80,256 TO $9200
372 GOSUB _assert:ARGS "PEEK(@40,$3F80)=$02"
373 GOSUB _assert:ARGS "PEEK(@40,$3FFF)=$86"
374 GOSUB _assert:ARGS "PEEK(@41,$007F)=$2C"
375 GOSUB _assert:ARGS "PEEK($9200)=$02"
376 GOSUB _assert:ARGS "PEEK($927F)=$86"
377 GOSUB _assert:ARGS "PEEK($92FF)=$2C"

380 GOSUB _output:ARGS "COPY @40,$3F80,256 TO @50,$3F00"
381 COPY @40,$3F80,256 TO @50,$3F00
382 GOSUB _assert:ARGS "PEEK(@40,$3F80)=$02"
383 GOSUB _assert:ARGS "PEEK(@40,$3FFF)=$86"
384 GOSUB _assert:ARGS "PEEK(@41,$007F)=$2C"
385 GOSUB _assert:ARGS "PEEK(@50,$3F00)=$02"
386 GOSUB _assert:ARGS "PEEK(@50,$3F7F)=$86"
387 GOSUB _assert:ARGS "PEEK(@50,$3FFF)=$2C"

398 GOSUB _title:ARGS "Paged Address Coersion"

400 FOR A=0 TO $3F00 STEP $100
402 GOSUB _output:ARGS "COPY $8000,256 TO @55,"+STR$(A)
404 COPY $8000,256 TO @55,A
406 GOSUB _peekmain:ARGS $807F,$86
407 GOSUB _peekpage:ARGS 55,A+$7F,$86
408 NEXT

418 GOSUB _title:ARGS "Page to Page"

420 GOSUB _output:ARGS "COPY @55 TO @60"
421 COPY @55 TO @60
422 FOR A=0 TO $3F00 STEP $100
423 GOSUB _peekpage:ARGS 60,A+$00,$02
424 GOSUB _peekpage:ARGS 60,A+$7F,$86
425 GOSUB _peekpage:ARGS 60,A+$FF,$2C
427 NEXT

490 goto 498
492 _peekmain:GETARGS PA,PB:GOSUB _assert:ARGS "PEEK("+STR$(PA)+")="+STR$(PB):RETURN
494 _peekpage:GETARGS PP,PA,PB:GOSUB _assert:ARGS "PEEK(@"+STR$(PP)+","+STR$(PA)+")="+STR$(PB):RETURN

498 GOSUB _title:ARGS "Invalid Page Errors"

500 GOSUB _copytp_err:ARGS $8000,256, 0,0,5
502 GOSUB _copytp_err:ARGS $8000,256,19,0,5
504 GOSUB _copytp_err:ARGS $8000,256,22,0,5
506 GOSUB _copytp_err:ARGS $8000,256,31,0,5
508 GOSUB _copytp_err:ARGS $8000,256,64,0,5

518 GOSUB _title:ARGS "Rollover Overflow Errors"

520 GOSUB _copytp_err:ARGS $8000,256,20,$3FFE,6
522 GOSUB _copytp_err:ARGS $8000,256,21,$3FFE,6
524 GOSUB _copytp_err:ARGS $8000,256,63,$3FFE,6

590 GOTO 598
592 _copytp_err:GETARGS PS,PL,PQ,PD,QE:QL=QL+1:QA$="COPY "+STR$(PS)+","+STR$(PL)+" TO @"+STR$(PQ)+","+STR$(PD):ON ERROR GOTO _yes_err:COPY PS,PL TO @PQ,PD:GOTO _no_err
598 REM

599 GOTO 890



890 _finish
892 _passed: GOSUB _output:ARGS "Passed:"+STR$(QR(1))
894 _failed: GOSUB _output:ARGS "Failed:"+STR$(QR(0))
896 END

900 _init:IF QU=0 THEN CLS
902 GOSUB _output:ARGS "Running Tests":QR$(0)="Fail: ":QR$(1)="Pass: ":RETURN

910 _title:GETARGS QT$:GOSUB _output:ARGS "":GOSUB _output:ARGS "Testing "+QT$:RETURN

920 _assert:GETARGS QA$:GOSUB _quotes:ARGS QA$ RETURN QA$
922 ON ERROR GOTO 926:QV=-EVAL(QA$):ON ERROR GOTO 0
924 GOSUB _output:ARGS QR$(QV)+QA$:QR(QV)=QR(QV)+1:RETURN
926 GOSUB _output:ARGS ERR$+" "+QA$:RESUME:ON ERROR GOTO 0:RETURN

940 _assert_err:GETARGS QA$,QE:GOSUB _quotes:ARGS QA$ RETURN QA$
942 ON ERROR GOTO _yes_err:QV=EVAL(QA$)
944 _no_err:ON ERROR GOTO 0:GOSUB _output:ARGS "No Error in "+QA$:QR(0)=QR(0)+1:RETURN
946 _yes_err:QV=-(ERR=QE):QR(QV)=QR(QV)+1:GOSUB _output:ARGS QR$(QV)+"Error"+STR$(QE)+" in "+QA$
948 RESUME:ON ERROR GOTO 0:RETURN

960 _outquoted:GOSUB GOSUB _quotes:ARGS QA$ RETURN QU$:GOTO _outputl:ARGS QU$

970 _quotes:QX$="":GETARGS QS$
972 FOR QI=1 TO LEN(QS$):QC$=MID$(QA$,QI,1):IF QC$="`" THEN QC$=CHR$(34)
976 QX$=QX$+QC$:NEXT:RETURN QX$

980 _output: GETARGS QU$:IF QU GOTO _lprint
982 IF QL>20 THEN GOSUB _pause
984 PRINT QU$:QL=QL+1:RETURN
986 _lprint:LPRINT QU$:RETURN

990 _pause:IF QU OR QK='c' THEN RETURN
992 PRINT:PRINT "...Press a key...":QL=0:QK=GETKEY:PRINT:RETURN
