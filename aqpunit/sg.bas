100 REM Incomplete
110 QG$="sj"
130 GOSUB _init

190 SC=40:SS=1.6:SE=999::S3=1023:S4=1023

200 _main:
202 GOSUB _title:ARGS "Screen Graphics %%-column" % (SC)
204 SET COLOR OFF

210 GOSUB _title:ARGS "FILL SCREEN"
211 GOSUB _output:ARGS LIST$(NEXT):GOSUB _init_screen
212 CLS:FILL SCREEN CHR '@'
213 GOSUB _getkey:L$=LIST$(NEXT)
214 PB=PEEKSCREEN(0):PE=PEEKSCREEN(SE):PN=PEEKSCREEN(SE+1)
215 GOSUB _main_screen:GOSUB _output:ARGS L$
216 GOSUB _assert:ARGS "PB='@'"
217 GOSUB _assert:ARGS "PE='@'"
218 GOSUB _assert:ARGS "PN=' '"

220 GOSUB _title:ARGS "SET BORDER and GETBORDER"
221 GOSUB _output:ARGS LIST$(NEXT):GOSUB _work_screen
222 SCREEN ,,,,0:CLS:SET BORDER CHR '*' COLOR 7,0
224 GOSUB _getkey:L$=LIST$(NEXT)
225 B1=GETBORDERCHR:B2=GETBORDERCOLOR:P1=PEEKSCREEN(0):P2=PEEKCOLOR(0)
228 GOSUB _main_screen:GOSUB _output:ARGS L$

230 GOSUB _output:ARGS LIST$(NEXT):GOSUB _work_screen
231 SCREEN ,,,,1:CLS:SET BORDER CHR "+"
232 GOSUB _main_screen:GOSUB _output:ARGS LIST$(NEXT):GOSUB _work_screen
233 SET BORDER COLOR 15,7
234 GOSUB _getkey:L$=LIST$(NEXT)
235 B3=GETBORDERCHR:B4=GETBORDERCOLOR:P3=PEEKSCREEN(S3):P4=PEEKCOLOR(S4)
238 GOSUB _main_screen:GOSUB _output:ARGS L$

240 GOSUB _assert:ARGS "B3='+'"
241 GOSUB _assert:ARGS "B4=$F7"
242 GOSUB _assert:ARGS "P3='+'"
243 GOSUB _assert:ARGS "P4=$F7"

245 GOSUB _assert:ARGS "B1='*'"
246 GOSUB _assert:ARGS "B2=$70"
247 GOSUB _assert:ARGS "P1='*'"
248 GOSUB _assert:ARGS "P2=$70"

250 GOSUB _output:ARGS LIST$(NEXT):GOSUB _work_screen
251 SCREEN ,,,,0:RESET BORDER
254 GOSUB _getkey:L$=LIST$(NEXT)
255 B1=GETBORDERCHR:B2=GETBORDERCOLOR:P1=PEEKSCREEN(0):P2=PEEKCOLOR(0)
258 GOSUB _main_screen:GOSUB _output:ARGS L$

260 GOSUB _output:ARGS LIST$(NEXT):GOSUB _work_screen
261 SCREEN ,,,,1:CLS:SET BORDER CHR '+' COLOR 15,7
264 GOSUB _getkey:L$=LIST$(NEXT)
265 B3=GETBORDERCHR:B4=GETBORDERCOLOR:P3=PEEKSCREEN(S3):P4=PEEKCOLOR(S4)
268 GOSUB _main_screen:GOSUB _output:ARGS L$

270 GOSUB _assert:ARGS "B3='+'"
271 GOSUB _assert:ARGS "B4=$F7"
272 GOSUB _assert:ARGS "P3='+'"
273 GOSUB _assert:ARGS "P4=$F7"

275 GOSUB _assert:ARGS "B1=' '"
276 GOSUB _assert:ARGS "B2=$06"
277 GOSUB _assert:ARGS "P1=' '"
278 GOSUB _assert:ARGS "P2=$06"

300 GOSUB _title:ARGS "GETCURSOR, SET CURSOR"
301 GOSUB _output:ARGS LIST$(NEXT):GOSUB _work_screen
302 SET CURSOR OFF:C1=GETCURSOR
303 GOSUB _main_screen:GOSUB _output:ARGS LIST$(NEXT): GOSUB _work_screen
304 SET CURSOR ON:C2=GETCURSOR
305 GOSUB _main_screen
307 GOSUB _assert:ARGS "C1=0"
308 GOSUB _assert:ARGS "C2=-1"

310 GOSUB _title:ARGS "CLEAR CURSOR"
311 GOSUB _output:ARGS LIST$(NEXT):GOSUB _work_screen
312 LOCATE 3,1:C3=PEEKSCREEN(SC*2+3)
313 GOSUB _main_screen:GOSUB _output:ARGS LIST$(NEXT):GOSUB _work_screen
314 CLEAR CURSOR:C4=PEEKSCREEN(SC*2+3)
315 GOSUB _getkey:GOSUB _main_screen
317 GOSUB _assert:ARGS "C3=$7F"
318 GOSUB _assert:ARGS "C4=' '"

320 GOSUB _title:ARGS "LOCATE, PRINT @, CURSORX, CURSORY, and CURSOROFFSET"
321 FOR SY=0 TO 23 STEP 2:SX=INT(SY*SS+1)
322 GOSUB _output:ARGS "SX=%% SY=%%" % (SX,SY)
324 GOSUB _output:ARGS LIST$(NEXT):GOSUB _work_screen
325 LOCATE SX,SY:CX=CURSORX:CY=CURSORY:CF=CURSOROFFSET
326 GOSUB _main_screen:GOSUB _output:ARGS LIST$(NEXT):GOSUB _work_screen
327 PRINT @(SX+1,SY+1);:AX=CURSORX:AY=CURSORY:AF=CURSOROFFSET


330 IF Y=23 THEN GOSUB _getkey
331 GOSUB _main_screen
332 GOSUB _assert:ARGS "CX=%%" % (SX)
333 GOSUB _assert:ARGS "CY=%%" % (SY+1)
334 GOSUB _assert:ARGS "CF=%%" % (SY*SC+SC+SX)
335 GOSUB _assert:ARGS "AX=%%" % (SX+1)
336 GOSUB _assert:ARGS "AY=%%" % (SY+2)
337 GOSUB _assert:ARGS "AF=%%" % (SY*SC+SC+SC+SX+1)
339 NEXT

602 'CLS COLOR
610 'GET/PUT SCREEN
634 'GETCOLOR
638 'RESET SCREEN
640 'SET COLOR
650 'STASH/SWAP/RESTORE SCREEN

700 if SC=80 THEN GOTO _finish
702 SC=80:SS=1.6:SE=1999:S3=2047:S4=2047
704 GOTO _main

710 _init_screen:
712 IF SC=40 THEN SCREEN 1,0,0,0,0:RETURN
714 STASH SCREEN:SCREEN 3,0,0,0,0:RETURN

720 _work_screen:
722 IF SC=40 THEN SCREEN 1:RETURN
724 SWAP SCREEN:RETURN

730 _main_screen:
732 IF SC=40 THEN SCREEN 3:RETURN
734 SWAP SCREEN:RETURN
