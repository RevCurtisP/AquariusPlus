100 REM Miscelleneous Graphics Functions
110 QG$="sb"
130 GOSUB _init

200 GOSUB _title:ARGS "RGB Functions"
210 FOR R=0 TO 13:G=R+1:B=R+2:
211 RR=R*16+R:GG=G*16+G:BB=B*16+B
212 S$=RIGHT$(HEX$(R),1)+RIGHT$(HEX$(G),1)+RIGHT$(HEX$(B),1)
214 C=R*256+G*16+B:C$=CHR$(G*16+B)+CHR$(R):H$=HEX$(C$)
216 X$=HEX$(R*16+R)+HEX$(G*16+G)+HEX$(B*16+B)
220 GOSUB _assert:ARGS "RGB(%%,%%,%%)=%%" % (R,G,B,C)
221 GOSUB _assert:ARGS "RGB$(%%,%%,%%)=$`%%`" % (R,G,B,H$)
222 GOSUB _assert:ARGS "RGB(`%%`)=%%" % (S$,C)
223 GOSUB _assert:ARGS "RGB$(`%%`)=$`%%`" % (S$,H$)
224 GOSUB _assert:ARGS "RGB(`%%`)=%%" % (X$,C)
225 GOSUB _assert:ARGS "RGB$(`%%`)=$`%%`" % (X$,H$)
226 GOSUB _assert:ARGS "RGB(`%%,%%,%%`,`,`)=%%" % (RR,GG,BB,C)
227 GOSUB _assert:ARGS "RGB$(`%% %% %%`,32)=$`%%`" % (RR,GG,BB,H$)

229 IF QU THEN PRINT ".";

231 HH$=HEX$(RR)+HEX$(GG)+HEX$(BB)
232 R$="$`"+HEX$(RGB$(R,G,B))+"`"
240 GOSUB _assert:ARGS "RGBDEC$(%%)=`%%,%%,%%`" % (R$,RR,GG,BB)
242 GOSUB _assert:ARGS "RGBDEC$(%%,92)=`%%\%%\%%`" % (R$,RR,GG,BB)
244 GOSUB _assert:ARGS "RGBDEC$(%%,'|')=`%%|%%|%%`" % (R$,RR,GG,BB)
246 GOSUB _assert:ARGS "RGBDEC$(%%,` `)=`%% %% %%`" % (R$,RR,GG,BB)

248 IF QU THEN PRINT ".";

250 GOSUB _assert:ARGS "RGBHEX$(%%)=`%%`" % (R$,HH$)
252 GOSUB _assert:ARGS "RGBHEX$(%%,92)=`\%%`" % (R$,HH$)
254 GOSUB _assert:ARGS "RGBHEX$(%%,'|')=`|%%`" % (R$,HH$)
256 GOSUB _assert:ARGS "RGBHEX$(%%,`#`)=`#%%`" % (R$,HH$)

258 IF QU THEN PRINT ".";

270 'ToDo: Add SET PALETTE and GET PALETTE tests

290 NEXT
295 IF QU THEN PRINT

400 GOSUB _title:ARGS "DEF RGBLIST"
411 GOSUB _output:ARGS LIST$(NEXT)
412 DEF RGBLIST R$=1,2,3;4,5,6;7,8,9;10,11,12
413 GOSUB _output:ARGS LIST$(NEXT)
414 APPEND RGBLIST R$="FED";"CBA";"987";"654"
415 GOSUB _output:ARGS LIST$(NEXT)
416 APPEND RGBLIST R$="123456";"789ABC";"FDECBA";"987654"
417 GOSUB _output:ARGS LIST$(NEXT)
418 APPEND RGBLIST R$=$A,$B,$C; $D,$E,$F; $A,$C,$E; $B,$D,$F
420 RC$="230156048907BC0AED0FBA0C8709540635019B07EB0F7509BC0AEF0DCE0ADF0B"
422 GOSUB _assert:ARGS "R$=$`%%`" % (RC$)

430 GOSUB _title:ARGS "SET PALETTE, GETPALETTE$(), and RESET PALETTE"
432 RESET PALETTE 1
433 GOSUB _output:ARGS LIST$(NEXT)
434 SET PALETTE 1 TO R$
436 GOSUB _assert:ARGS "GETPALETTE$(1)=R$"
440 FOR I=0 TO 15:PC$=RC$[I*4+1 TO I*4+4]
442 GOSUB _assert:ARGS "GETPALETTE$(1,%%)=$`%%`" % (I, PC$)
444 NEXT 
445 GOSUB _output:ARGS LIST$(NEXT)
446 RESET PALETTE 1:P1$=GETPALETTE$(1)
447 RP$="1101110FF101F10F2E021F0FCC03FF0FCC0CBB032C0C1904F70FD402220B3303"
448 GOSUB _assert:ARGS "P1$=$`%%`" % (RP$)
